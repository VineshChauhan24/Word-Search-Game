apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'com.google.firebase.appdistribution'
apply plugin: 'kotlinx-serialization'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: "org.jlleitschuh.gradle.ktlint"

android {

    def keystoreProperties = new Properties()
    def keystorePropertiesFile = rootProject.file('key.properties')
    if (keystorePropertiesFile.exists()) {
        // when building locally, use signing properties from key.properties
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    } else {
        // add check to enable local build
        if (System.getenv('KEY_STORE_PATH') != null) {
            // when building CI server, use signing properties from environment variables
            keystoreProperties.setProperty('storePassword', System.getenv('STORE_PASSWORD'))
            keystoreProperties.setProperty('keyPassword', System.getenv('KEY_PASSWORD'))
            keystoreProperties.setProperty('keyAlias', System.getenv('KEY_ALIAS'))
            keystoreProperties.setProperty('storeFile', System.getenv('KEY_STORE_PATH'))
        }
    }

    compileSdk 31

    defaultConfig {
        applicationId "co.africanwolf.hiddenwords"
        minSdk 24
        targetSdk 31
        versionCode 1
        versionName "2.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        viewBinding true
    }

    signingConfigs {
        release {
            if (keystoreProperties.getProperty("storeFile") != null) {
                storePassword keystoreProperties['storePassword']
                keyPassword keystoreProperties['keyPassword']
                keyAlias keystoreProperties['keyAlias']
                storeFile file(keystoreProperties['storeFile'])
            }
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            firebaseAppDistribution {
                releaseNotes = ""
                testers = "jorh.choxxy@gmail.com"
            }
        }

        debug {
            minifyEnabled false
        }
    }


}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.google.android.material:material:1.4.0'

    androidTestImplementation('androidx.test.espresso:espresso-core:3.2.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    implementation platform('com.google.firebase:firebase-bom:29.0.0')
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-perf'

    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.2'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.4.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.17'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.github.abdularis:CircularImageView:v1.2'
    testImplementation 'junit:junit:4.13.2'

    // extensions
    implementation "androidx.fragment:fragment-ktx:1.4.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.4.0"

    implementation "com.google.dagger:hilt-android:2.38.1"
    kapt "com.google.dagger:hilt-compiler:2.38.1"

    implementation 'com.akexorcist:round-corner-progress-bar:2.1.2'

    //serialization
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.0"

    //coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.2"

    // splash screen
    implementation 'androidx.core:core-splashscreen:1.0.0-alpha02'
}

